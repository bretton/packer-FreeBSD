if [ -e /dev/ada0 ]; then
	GEOM=ada0 # VirtualBox
else
	GEOM=da0  # Qemu-KVM-Libvirt with virtio-scsi
fi

if [ "$FILESYSTEM" = 'ufs' ]; then
	PARTITIONS="$GEOM"
else
	export ZFSBOOT_DISKS="$GEOM"
	# export ZFSBOOT_POOL_CREATE_OPTIONS="-O compress=zstd -O atime=off"

    # Additions from https://github.com/network-shark/packer-freebsd/blob/master/http/installerconfig
    ZFSBOOT_BEROOT_NAME=ROOT
    ZFSBOOT_BOOTFS_NAME=default
    ZFSBOOT_DATASETS="
    # DATASET   OPTIONS (comma or space separated; or both)
    # Boot Environment [BE] root and default boot dataset
    /$ZFSBOOT_BEROOT_NAME               mountpoint=none
    /$ZFSBOOT_BEROOT_NAME/$ZFSBOOT_BOOTFS_NAME  mountpoint=/
    # Compress /tmp, allow exec but not setuid
    /tmp        mountpoint=/tmp,exec=on,setuid=off
    # Don't mount /usr so that 'base' files go to the BEROOT
    /usr        mountpoint=/usr,canmount=off
    # Home directories separated so they are common to all BEs
    /home  mountpoint=/home
    # Ports tree
    /usr/ports  setuid=off
    # Source tree (compressed)
    /usr/src
    # Create /var and friends
    /var        mountpoint=/var,canmount=off
    /var/audit  exec=off,setuid=off
    /var/crash  exec=off,setuid=off
    /var/log    exec=off,setuid=off
    /var/mail   atime=on
    /var/tmp    setuid=off
    " # END-QUOTE

	export nonInteractive="YES"
fi

#!/bin/sh

# Setup rc.conf location sentinel
if [ "$RC_CONF_FILE" = 'local' ]; then
	touch /tmp/rc-local
	SSHD_RC_CONF_FILE=/etc/rc.conf.local
	SENDMAIL_RC_CONF_FILE=/etc/rc.conf.local
    ZFS_RC_CONF_FILE=/etc/rc.conf.local
elif [ "$RC_CONF_FILE" = 'vendor' ]; then
	touch /tmp/rc-vendor
	SSHD_RC_CONF_FILE=/etc/defaults/vendor.conf
	SENDMAIL_RC_CONF_FILE=/etc/defaults/vendor.conf
    ZFS_RC_CONF_FILE=/etc/defaults/vendor.conf
elif [ "$RC_CONF_FILE" = 'name' ]; then
	touch /tmp/rc-name
	SSHD_RC_CONF_FILE=/etc/rc.conf.d/sshd
	SENDMAIL_RC_CONF_FILE=/etc/rc.conf.d/sendmail
    ZFS_RC_CONF_FILE=/etc/rc.conf.d/zfs
else
	SSHD_RC_CONF_FILE=/etc/rc.conf
	SENDMAIL_RC_CONF_FILE=/etc/rc.conf
    ZFS_RC_CONF_FILE=/etc/rc.conf
fi

# Disable X11
echo 'OPTIONS_UNSET+=X11' >> /etc/make.conf

# Basic network options
sysrc hostname=localhost

# Use DHCP to get the network configuration
sysrc ifconfig_DEFAULT=SYNCDHCP

# Enable sshd by default
sysrc -f "$SSHD_RC_CONF_FILE" sshd_enable=YES
# Disable DNS lookups by default to make SSH connect quickly
sed -i '' -e 's/^#UseDNS yes/UseDNS no/' /etc/ssh/sshd_config
# Allow root logins during build.  Deactivated upon cleanup
sed -i '' -e 's/^#PermitRootLogin no/PermitRootLogin yes/' /etc/ssh/sshd_config

# Disable sendmail
sysrc -f "$SENDMAIL_RC_CONF_FILE" sendmail_enable=NONE

# Change root's password to vagrant
echo 'vagrant' | pw usermod root -h 0

# Reboot quickly, don't wait at the panic screen
{
	echo 'debug.trace_on_panic=1'
	echo 'debug.debugger_on_panic=0'
	echo 'kern.panic_reboot_wait_time=0'
} >> /etc/sysctl.conf

# The console is not interactive, so we might as well boot quickly
sysrc -f /boot/loader.conf autoboot_delay=-1

# Enable ZFS in rc_conf else errors booting with smaller than 32GB
if [ "$FILESYSTEM" = 'zfs' ]; then
    sysrc -f "$ZFS_RC_CONF_FILE" zfs_enable=YES
    echo "zfs_load=\"YES\"" >> /boot/loader.conf
    echo "vfs.root.mountfrom=\"zfs:zroot/ROOT/default\"" >> /boot/loader.conf
    gpart bootcode -b /boot/pmbr -p /boot/gptzfsboot -i 1 "$GEOM"
fi

# Reboot
shutdown -r now
